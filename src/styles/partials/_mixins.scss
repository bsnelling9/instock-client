@import "./variables";

// media queries
@mixin tablet {
    @media (min-width: 768px) {
        @content;
    }
}

@mixin desktop {
    @media (min-width: 1280px) {
        @content;
    }
}

@mixin font-size($fs-map, $fs-breakpoints: $breakpoints) {

    @each $fs-breakpoint,
    $fs-font-size in $fs-map {
        @if $fs-breakpoint==null {
            @include make-font-size($fs-font-size);
        }

        @else {
            @if map-has-key($fs-breakpoints, $fs-breakpoint) {
                $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
            }

            @media screen and (min-width: $fs-breakpoint) {
                @include make-font-size($fs-font-size);
            }
        }
    }
}

@mixin make-font-size($fs-font-size) {
    @if type-of($fs-font-size)=="list" {
        font-size: nth($fs-font-size, 1);

        @if (length($fs-font-size) > 1) {
            line-height: nth($fs-font-size, 2);
        }
    }

    @else {
        font-size: $fs-font-size;
    }
}

//  DISPLAY FLEX

@mixin display-flex($direction, $justify, $align) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}


//   box shadow
@mixin component-box {
    background-color: $global-white-color;
    margin: 1rem;
    border-radius: .25rem;
    box-shadow: 0 2px 5px 0 #13182c10;
    margin-top: -5rem;
}

// form fields
@mixin form-field {
    display: flex;
    flex-direction: column;
    gap: .25rem;
    padding-bottom: 16px;
}

@mixin form-input {
    outline: none !important;
    border-radius: 1.25rem;
    padding: 0 1rem;
    border: solid .0625rem $secondary-grey;
    cursor: pointer;
    resize: none;

    &:focus {
        border: $interactive-color solid .0625rem;
        outline: none !important;
    }

    &:invalid {
        outline: none !important;
        border: $alert-color solid .0625rem;
    }

    &::placeholder {
        color: $secondary-text-color;
        opacity: 1;
    }

    @include tablet {
        min-height: 38px;
    }

}